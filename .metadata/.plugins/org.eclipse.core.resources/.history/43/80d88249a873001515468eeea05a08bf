package br.com.tecnonoticias.cienciaDaComputacao3Semestre.main;

import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.List;
import java.util.Locale;

import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.border.LineBorder;
import javax.swing.table.DefaultTableModel;

import com.birosoft.liquid.LiquidLookAndFeel;

import br.com.tecnonoticias.cienciaDaComputacao3Semestre.dao.PessoaDao;
import br.com.tecnonoticias.cienciaDaComputacao3Semestre.modelo.PessoaFisica;

public class JdbcTesteBusca {
	
	private JFrame janela;
	private JPanel painelPrincipal;
	private JTable tabela;
	
	public static void main(String[] args) {
		Locale.setDefault(new Locale("pt", "BR"));
		lookandfeel();
		new JdbcTesteBusca().montaTela();

	}
	private void montaTela() {
		preparaJanela();
		preparaPainelPrincipal();
//		preparaTitulo();
		preparaTabela();
		preparaBotaoCarregar();
//		preparaBotaoSair();
		mostraJanea();
	}

	private void preparaTabela() {
		tabela = new JTable();
		tabela.setBorder(new LineBorder(Color.black));
		tabela.setGridColor(Color.black);
		tabela.setShowGrid(true);
		JScrollPane scroll = new JScrollPane();
		scroll.getViewport().setBorder(null);
		scroll.setSize(450, 450);
		scroll.getViewport().add(tabela);
		painelPrincipal.add(scroll);
	}
	private void preparaJanela() {
		janela = new JFrame("Consulta");
		janela.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
	}
	private void preparaPainelPrincipal() {
		painelPrincipal = new JPanel();
		janela.add(painelPrincipal);
	}
	private void mostraJanea() {
		janela.pack();
		janela.setSize(540, 540);
		janela.setVisible(true);

	}
	private void preparaBotaoCarregar() {
		JButton botaoCarregar = new JButton("Carregar XML");
		botaoCarregar.addActionListener(new ActionListener() {
			@Override
			public void actionPerformed(ActionEvent e) {
				PessoaDao dao = new PessoaDao();
				List<PessoaFisica> pessoas = dao.busca();

				String[] linhas = new String[9];
				for (PessoaFisica pessoa : pessoas) {
//					  linhas[0] = pessoa.getPessoaId();
					 linhas[1] = pessoa.getNome();
					 linhas[2] = pessoa.getCpf();
					 linhas[3] = pessoa.getRg();
					 linhas[4] = pessoa.getSexo();
					 linhas[5] = pessoa.getEndereco();
					 linhas[6] = pessoa.getCidade();
					 linhas[7] = pessoa.getEstado();
//					 linhas[1] = pessoa.getDataNascimento().getTime();
				}
				DefaultTableModel dtm = new DefaultTableModel(linhas,7);
				tabela.setModel(dtm);
			}
		});
		painelPrincipal.add(botaoCarregar);
	}
	
	public static void consultar() {
		PessoaDao dao = new PessoaDao();
		
		List<PessoaFisica> pessoas = dao.busca();

		for (PessoaFisica pessoa : pessoas) {
			  System.out.println("Id: " + pessoa.getPessoaId());
			  System.out.println("Nome: " + pessoa.getNome());
			  System.out.println("Cpf: " + pessoa.getCpf());
			  System.out.println("Rg:" + pessoa.getRg());
			  System.out.println("Sexo: "+ pessoa.getSexo());
			  System.out.println("Endere√ßo: " + pessoa.getEndereco());
			  System.out.println("Cidade: "+ pessoa.getCidade());
			  System.out.println("Estado: " + pessoa.getEstado());
			  System.out.println("Data de Nascimento: " + pessoa.getDataNascimento().getTime() + "\n");
		}				
	}
	public static void lookandfeel() {
		try {
			/**
			 * "com.birosoft.liquid.LiquidLookAndFeel" tema mac
			 * "com.jtattoo.plaf.aero.AeroLookAndFeel" tema aero
			 * "com.jtattoo.plaf.hifi.HiFiLookAndFeel" black
			 * "com.jtattoo.plaf.acryl.AcrylLookAndFeel" tema acryl
			 * "com.jtattoo.plaf.mcwin.McWinLookAndFeel" tema mcWin
			 * "com.jtattoo.plaf.smart.SmartLookAndFeel" tema smart
			 */
			UIManager.setLookAndFeel("com.jtattoo.plaf.mcwin.McWinLookAndFeel");
			LiquidLookAndFeel.setLiquidDecorations(true, "mac");

		} catch (ClassNotFoundException e) {
			e.printStackTrace();
		} catch (InstantiationException e) {
			e.printStackTrace();
		} catch (IllegalAccessException e) {
			e.printStackTrace();
		} catch (UnsupportedLookAndFeelException e) {
			e.printStackTrace();
		}
	}
}